version: "3.3"

services:
  memcached:
    image: memcached:latest
    hostname: ${MEMCACHED_HOST}
    container_name: memcached
    env_file: .env
    restart: always

  rabbitmq:
    image: rabbitmq:3.8-rc-management
    env_file: .env
    container_name: rabbitmq
    hostname: ${RABBITMQ_DEFAULT_HOST}
    restart: always

  backend:
    env_file: .env
    build: .
    container_name: backend
    command: ./commands/wsgi/${SERVER}.sh
    restart: always
    hostname: ${WSGI_HOST}
    depends_on:
      - memcached
      - rabbitmq
      - postgres
    ports:
      - "8001:8001"
      - "8002:8002"
    volumes:
      - ./:/srv/project

  celery:
    env_file: .env
    build: .
    container_name: celery
    command: ./commands/start_celery.sh
    restart: always
    depends_on:
      - memcached
      - rabbitmq
      - postgres
    volumes:
      - ./:/srv/project

  celerybeat:
    env_file: .env
    build: .
    container_name: celerybeat
    command: ./commands/start_celerybeat.sh
    restart: always
    depends_on:
      - memcached
      - rabbitmq
      - postgres
    volumes:
      - ./:/srv/project

  postgres:
    image: postgres:12.3-alpine
    container_name: postgres
    hostname: ${POSTGRES_HOST}
    env_file: .env
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data

  flower:
    image: totem/celery-flower-docker
    container_name: flower
    env_file: .env
    restart: always
    depends_on:
      - rabbitmq
    ports:
      - "8888:8888"

  portainer:
    image: portainer/portainer
    container_name: portainer
    env_file: .env
    restart: always
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  nginx:
    image: nginx:1.17.4-alpine
    container_name: nginx
    env_file:
      - .env
    command: /bin/sh /etc/nginx/start_nginx.sh
    volumes:
      - ./nginx/.htpasswd:/etc/nginx/conf.d/.htpasswd
      - ./nginx/proxy_params:/etc/nginx/conf.d/proxy_params
      - ./commands/start_nginx.sh:/etc/nginx/start_nginx.sh
      - ./nginx/default.template:/etc/nginx/template.conf
      - ./static_content:/etc/nginx/static_content/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend

volumes:
  db_data: {}
  portainer_data: {}
